Part 2:
	substr
			protected
			check if start bigger than len(s)
			check if len too big
			protect malloc
	strjoin
			protected
			protect malloc
	strtrim
			protected
			find start index
			find end index
			check if trim is full of chars
			calculate total len
			return substring
	split	
			protected
			if empty string returns empty string
			count number of subsplit
			protect malloc
			fill string of strings
	itoa
			allocate space for every digit, +1 if negative
			fill with number from back
			put 45 if negative
	strmapi
			protected
			protect malloc
			changes chars
	putchar
			puts char
	putstr
			protected
	putendl
			protected
	putnbr
			if negative print - and convert to +
			recursive
